// Generated by view binder compiler. Do not edit!
package com.luislabs.details.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.luislabs.details.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ShimmerDetailsBinding implements ViewBinding {
  @NonNull
  private final ShimmerFrameLayout rootView;

  @NonNull
  public final View shimmerAddToMyList;

  @NonNull
  public final ShimmerFrameLayout shimmerDetailsContainer;

  @NonNull
  public final View shimmerDownload;

  @NonNull
  public final View shimmerGenres1;

  @NonNull
  public final View shimmerGenres2;

  @NonNull
  public final View shimmerGenres3;

  @NonNull
  public final ConstraintLayout shimmerMovieContainer;

  @NonNull
  public final View shimmerMovieGenres1;

  @NonNull
  public final View shimmerMovieGenres2;

  @NonNull
  public final View shimmerMovieGenres3;

  @NonNull
  public final View shimmerOverview;

  @NonNull
  public final View shimmerPlay;

  @NonNull
  public final View shimmerPoster;

  @NonNull
  public final View shimmerSimilarMovieLabel;

  private ShimmerDetailsBinding(@NonNull ShimmerFrameLayout rootView,
      @NonNull View shimmerAddToMyList, @NonNull ShimmerFrameLayout shimmerDetailsContainer,
      @NonNull View shimmerDownload, @NonNull View shimmerGenres1, @NonNull View shimmerGenres2,
      @NonNull View shimmerGenres3, @NonNull ConstraintLayout shimmerMovieContainer,
      @NonNull View shimmerMovieGenres1, @NonNull View shimmerMovieGenres2,
      @NonNull View shimmerMovieGenres3, @NonNull View shimmerOverview, @NonNull View shimmerPlay,
      @NonNull View shimmerPoster, @NonNull View shimmerSimilarMovieLabel) {
    this.rootView = rootView;
    this.shimmerAddToMyList = shimmerAddToMyList;
    this.shimmerDetailsContainer = shimmerDetailsContainer;
    this.shimmerDownload = shimmerDownload;
    this.shimmerGenres1 = shimmerGenres1;
    this.shimmerGenres2 = shimmerGenres2;
    this.shimmerGenres3 = shimmerGenres3;
    this.shimmerMovieContainer = shimmerMovieContainer;
    this.shimmerMovieGenres1 = shimmerMovieGenres1;
    this.shimmerMovieGenres2 = shimmerMovieGenres2;
    this.shimmerMovieGenres3 = shimmerMovieGenres3;
    this.shimmerOverview = shimmerOverview;
    this.shimmerPlay = shimmerPlay;
    this.shimmerPoster = shimmerPoster;
    this.shimmerSimilarMovieLabel = shimmerSimilarMovieLabel;
  }

  @Override
  @NonNull
  public ShimmerFrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ShimmerDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ShimmerDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.shimmer_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ShimmerDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.shimmerAddToMyList;
      View shimmerAddToMyList = ViewBindings.findChildViewById(rootView, id);
      if (shimmerAddToMyList == null) {
        break missingId;
      }

      ShimmerFrameLayout shimmerDetailsContainer = (ShimmerFrameLayout) rootView;

      id = R.id.shimmerDownload;
      View shimmerDownload = ViewBindings.findChildViewById(rootView, id);
      if (shimmerDownload == null) {
        break missingId;
      }

      id = R.id.shimmerGenres1;
      View shimmerGenres1 = ViewBindings.findChildViewById(rootView, id);
      if (shimmerGenres1 == null) {
        break missingId;
      }

      id = R.id.shimmerGenres2;
      View shimmerGenres2 = ViewBindings.findChildViewById(rootView, id);
      if (shimmerGenres2 == null) {
        break missingId;
      }

      id = R.id.shimmerGenres3;
      View shimmerGenres3 = ViewBindings.findChildViewById(rootView, id);
      if (shimmerGenres3 == null) {
        break missingId;
      }

      id = R.id.shimmerMovieContainer;
      ConstraintLayout shimmerMovieContainer = ViewBindings.findChildViewById(rootView, id);
      if (shimmerMovieContainer == null) {
        break missingId;
      }

      id = R.id.shimmerMovieGenres1;
      View shimmerMovieGenres1 = ViewBindings.findChildViewById(rootView, id);
      if (shimmerMovieGenres1 == null) {
        break missingId;
      }

      id = R.id.shimmerMovieGenres2;
      View shimmerMovieGenres2 = ViewBindings.findChildViewById(rootView, id);
      if (shimmerMovieGenres2 == null) {
        break missingId;
      }

      id = R.id.shimmerMovieGenres3;
      View shimmerMovieGenres3 = ViewBindings.findChildViewById(rootView, id);
      if (shimmerMovieGenres3 == null) {
        break missingId;
      }

      id = R.id.shimmerOverview;
      View shimmerOverview = ViewBindings.findChildViewById(rootView, id);
      if (shimmerOverview == null) {
        break missingId;
      }

      id = R.id.shimmerPlay;
      View shimmerPlay = ViewBindings.findChildViewById(rootView, id);
      if (shimmerPlay == null) {
        break missingId;
      }

      id = R.id.shimmerPoster;
      View shimmerPoster = ViewBindings.findChildViewById(rootView, id);
      if (shimmerPoster == null) {
        break missingId;
      }

      id = R.id.shimmerSimilarMovieLabel;
      View shimmerSimilarMovieLabel = ViewBindings.findChildViewById(rootView, id);
      if (shimmerSimilarMovieLabel == null) {
        break missingId;
      }

      return new ShimmerDetailsBinding((ShimmerFrameLayout) rootView, shimmerAddToMyList,
          shimmerDetailsContainer, shimmerDownload, shimmerGenres1, shimmerGenres2, shimmerGenres3,
          shimmerMovieContainer, shimmerMovieGenres1, shimmerMovieGenres2, shimmerMovieGenres3,
          shimmerOverview, shimmerPlay, shimmerPoster, shimmerSimilarMovieLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
